[gd_resource type="VisualShader" load_steps=15 format=2]

[sub_resource type="Gradient" id=1]

[sub_resource type="GradientTexture" id=2]
gradient = SubResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = SubResource( 2 )

[sub_resource type="VisualShaderNodeVectorCompose" id=4]

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "world"

[sub_resource type="VisualShaderNodeTransformVecMult" id=6]

[sub_resource type="Gradient" id=7]

[sub_resource type="GradientTexture" id=8]
gradient = SubResource( 7 )

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = SubResource( 8 )

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=11]
function = 0

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=13]
default_input_values = [ 0, Vector3( 1, 1, 1 ), 1, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=14]
default_input_values = [ 0, Vector3( 1, 1, 1 ), 1, Vector3( 0, 0, 0 ) ]
operator = 2

[resource]
code = "shader_type spatial;
render_mode cull_disabled;

uniform sampler2D tex_vtx_2;uniform sampler2D tex_frg_2;


void vertex() {
// Input:6
	vec3 n_out6p0;
	n_out6p0 = VERTEX;

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	vec4 tex_vtx_2_read = texture( tex_vtx_2 , UV.xy );
	n_out2p0 = tex_vtx_2_read.rgb;
	n_out2p1 = tex_vtx_2_read.a;

// Input:13
	mat4 n_out13p0;
	n_out13p0 = WORLD_MATRIX;

// Input:3
	float n_out3p0;
	n_out3p0 = TIME;

// TransformVectorMult:14
	vec3 n_out14p0;
	n_out14p0 = ( n_out13p0 * vec4(vec3(n_out3p0), 1.0) ).xyz;

// ScalarFunc:5
	float n_out5p0;
	n_out5p0 = sin(dot(n_out14p0,vec3(0.333333,0.333333,0.333333)));

// VectorCompose:12
	float n_in12p0 = 0.00000;
	vec3 n_out12p0;
	n_out12p0 = vec3( n_in12p0 , n_out5p0 , n_out5p0 );

// VectorOp:8
	vec3 n_out8p0;
	n_out8p0 = n_out2p0 * n_out12p0;

// VectorOp:7
	vec3 n_out7p0;
	n_out7p0 = n_out6p0 + n_out8p0;

// Output:0
	VERTEX = n_out7p0;

}

void fragment() {
// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	vec4 tex_frg_2_read = texture( tex_frg_2 , UV.xy );
	n_out2p0 = tex_frg_2_read.rgb;
	n_out2p1 = tex_frg_2_read.a;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -539, -42.5 )
modes/cull = 2
nodes/vertex/0/position = Vector2( 440, 160 )
nodes/vertex/2/node = SubResource( 9 )
nodes/vertex/2/position = Vector2( -780, 0 )
nodes/vertex/3/node = SubResource( 10 )
nodes/vertex/3/position = Vector2( -1960, 760 )
nodes/vertex/5/node = SubResource( 11 )
nodes/vertex/5/position = Vector2( -1140, 600 )
nodes/vertex/6/node = SubResource( 12 )
nodes/vertex/6/position = Vector2( -720, -220 )
nodes/vertex/7/node = SubResource( 13 )
nodes/vertex/7/position = Vector2( 60, 120 )
nodes/vertex/8/node = SubResource( 14 )
nodes/vertex/8/position = Vector2( -280, 240 )
nodes/vertex/12/node = SubResource( 4 )
nodes/vertex/12/position = Vector2( -780, 400 )
nodes/vertex/13/node = SubResource( 5 )
nodes/vertex/13/position = Vector2( -1980, 220 )
nodes/vertex/14/node = SubResource( 6 )
nodes/vertex/14/position = Vector2( -1620, 440 )
nodes/vertex/connections = PoolIntArray( 7, 0, 0, 0, 6, 0, 7, 0, 8, 0, 7, 1, 2, 0, 8, 0, 5, 0, 12, 2, 12, 0, 8, 1, 13, 0, 14, 0, 3, 0, 14, 1, 14, 0, 5, 0, 5, 0, 12, 1 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -400, 520 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0 )
