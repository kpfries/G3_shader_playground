[gd_resource type="VisualShader" load_steps=31 format=2]

[ext_resource path="res://Textures/noise01.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeVectorOp" id=1]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 8, 8, 8 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=2]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 8, 8, 8 ) ]
operator = 3

[sub_resource type="VisualShaderNodeVectorFunc" id=3]
output_port_for_preview = 0
function = 19

[sub_resource type="OpenSimplexNoise" id=4]

[sub_resource type="NoiseTexture" id=5]
seamless = true
noise = SubResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=6]
output_port_for_preview = 0
texture = SubResource( 5 )

[sub_resource type="VisualShaderNodeVectorOp" id=7]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 8, 8, 8 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=8]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]
operator = 3

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=11]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 0.4 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=13]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=16]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="Gradient" id=18]
offsets = PoolRealArray( 0, 0.690058, 1 )
colors = PoolColorArray( 0.0595265, 0.289155, 0.511719, 1, 0.314051, 0.657202, 0.828079, 1, 0.710938, 0.913281, 1, 1 )

[sub_resource type="GradientTexture" id=19]
gradient = SubResource( 18 )
width = 512

[sub_resource type="VisualShaderNodeTexture" id=20]
output_port_for_preview = 0
texture = SubResource( 19 )

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=22]

[sub_resource type="VisualShaderNodeVectorOp" id=23]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=24]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0.2, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=25]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=26]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=27]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=28]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=29]
input_name = "vertex"

[resource]
code = "shader_type spatial;
uniform sampler2D tex_vtx_2;uniform sampler2D tex_frg_2;uniform sampler2D tex_frg_13;uniform sampler2D tex_frg_9;


void vertex() {
// Input:3
	float n_out3p0;
	n_out3p0 = TIME;

// ScalarOp:8
	float n_in8p1 = 0.20000;
	float n_out8p0;
	n_out8p0 = n_out3p0 * n_in8p1;

// Input:10
	vec3 n_out10p0;
	n_out10p0 = vec3(UV,0.0);

// VectorOp:7
	vec3 n_out7p0;
	n_out7p0 = vec3(n_out8p0) + n_out10p0;

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	vec4 tex_vtx_2_read = texture( tex_vtx_2 , n_out7p0.xy );
	n_out2p0 = tex_vtx_2_read.rgb;
	n_out2p1 = tex_vtx_2_read.a;

// VectorOp:12
	vec3 n_in12p1 = vec3(0.00000,1.00000,0.00000);
	vec3 n_out12p0;
	n_out12p0 = n_out2p0 * n_in12p1;

// Input:9
	vec3 n_out9p0;
	n_out9p0 = VERTEX;

// VectorOp:11
	vec3 n_out11p0;
	n_out11p0 = n_out12p0 + n_out9p0;

// VectorOp:13
	vec3 n_in13p1 = vec3(1.00000,0.20000,1.00000);
	vec3 n_out13p0;
	n_out13p0 = n_out11p0 * n_in13p1;

// Output:0
	VERTEX = n_out13p0;

}

void fragment() {
// Input:3
	float n_out3p0;
	n_out3p0 = TIME;

// ScalarOp:8
	float n_in8p1 = 0.20000;
	float n_out8p0;
	n_out8p0 = n_out3p0 * n_in8p1;

// Input:6
	vec3 n_out6p0;
	n_out6p0 = vec3(UV,0.0);

// VectorOp:7
	vec3 n_out7p0;
	n_out7p0 = vec3(n_out8p0) + n_out6p0;

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	vec4 tex_frg_2_read = texture( tex_frg_2 , n_out7p0.xy );
	n_out2p0 = tex_frg_2_read.rgb;
	n_out2p1 = tex_frg_2_read.a;

// Input:16
	float n_out16p0;
	n_out16p0 = TIME;

// ScalarOp:19
	float n_in19p1 = 0.40000;
	float n_out19p0;
	n_out19p0 = n_out16p0 * n_in19p1;

// Input:17
	vec3 n_out17p0;
	n_out17p0 = vec3(UV,0.0);

// VectorOp:18
	vec3 n_out18p0;
	n_out18p0 = vec3(n_out19p0) + n_out17p0;

// Texture:13
	vec3 n_out13p0;
	float n_out13p1;
	vec4 tex_frg_13_read = texture( tex_frg_13 , n_out18p0.xy );
	n_out13p0 = tex_frg_13_read.rgb;
	n_out13p1 = tex_frg_13_read.a;

// VectorOp:14
	vec3 n_out14p0;
	n_out14p0 = n_out2p0 + n_out13p0;

// VectorOp:15
	vec3 n_in15p1 = vec3(2.00000,2.00000,2.00000);
	vec3 n_out15p0;
	n_out15p0 = n_out14p0 / n_in15p1;

// VectorOp:10
	vec3 n_in10p1 = vec3(8.00000,8.00000,8.00000);
	vec3 n_out10p0;
	n_out10p0 = n_out15p0 * n_in10p1;

// VectorFunc:12
	vec3 n_out12p0;
	n_out12p0=floor(n_out10p0);

// VectorOp:11
	vec3 n_in11p1 = vec3(8.00000,8.00000,8.00000);
	vec3 n_out11p0;
	n_out11p0 = n_out12p0 / n_in11p1;

// Texture:9
	vec3 n_out9p0;
	float n_out9p1;
	vec4 tex_frg_9_read = texture( tex_frg_9 , n_out11p0.xy );
	n_out9p0 = tex_frg_9_read.rgb;
	n_out9p1 = tex_frg_9_read.a;

// Output:0
	ALBEDO = n_out9p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -406, 90 )
nodes/vertex/0/position = Vector2( 480, 140 )
nodes/vertex/2/node = SubResource( 25 )
nodes/vertex/2/position = Vector2( -700, -100 )
nodes/vertex/3/node = SubResource( 26 )
nodes/vertex/3/position = Vector2( -2200, 360 )
nodes/vertex/7/node = SubResource( 27 )
nodes/vertex/7/position = Vector2( -1060, 100 )
nodes/vertex/8/node = SubResource( 28 )
nodes/vertex/8/position = Vector2( -1600, 100 )
nodes/vertex/9/node = SubResource( 29 )
nodes/vertex/9/position = Vector2( -980, 700 )
nodes/vertex/10/node = SubResource( 21 )
nodes/vertex/10/position = Vector2( -1800, 540 )
nodes/vertex/11/node = SubResource( 22 )
nodes/vertex/11/position = Vector2( -80, 220 )
nodes/vertex/12/node = SubResource( 23 )
nodes/vertex/12/position = Vector2( -340, 60 )
nodes/vertex/13/node = SubResource( 24 )
nodes/vertex/13/position = Vector2( 200, 200 )
nodes/vertex/connections = PoolIntArray( 7, 0, 2, 0, 10, 0, 7, 1, 9, 0, 11, 1, 2, 0, 12, 0, 12, 0, 11, 0, 3, 0, 8, 0, 8, 0, 7, 0, 11, 0, 13, 0, 13, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 700, 140 )
nodes/fragment/2/node = SubResource( 13 )
nodes/fragment/2/position = Vector2( -860, 0 )
nodes/fragment/3/node = SubResource( 14 )
nodes/fragment/3/position = Vector2( -1480, 120 )
nodes/fragment/6/node = SubResource( 15 )
nodes/fragment/6/position = Vector2( -1320, 320 )
nodes/fragment/7/node = SubResource( 16 )
nodes/fragment/7/position = Vector2( -1100, 100 )
nodes/fragment/8/node = SubResource( 17 )
nodes/fragment/8/position = Vector2( -1280, 120 )
nodes/fragment/9/node = SubResource( 20 )
nodes/fragment/9/position = Vector2( 400, 100 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -160, 100 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 200, 100 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 0, 100 )
nodes/fragment/13/node = SubResource( 6 )
nodes/fragment/13/position = Vector2( -900, 340 )
nodes/fragment/14/node = SubResource( 7 )
nodes/fragment/14/position = Vector2( -640, 120 )
nodes/fragment/15/node = SubResource( 8 )
nodes/fragment/15/position = Vector2( -420, 100 )
nodes/fragment/16/node = SubResource( 9 )
nodes/fragment/16/position = Vector2( -1600, 440 )
nodes/fragment/17/node = SubResource( 10 )
nodes/fragment/17/position = Vector2( -1440, 640 )
nodes/fragment/18/node = SubResource( 11 )
nodes/fragment/18/position = Vector2( -1220, 420 )
nodes/fragment/19/node = SubResource( 12 )
nodes/fragment/19/position = Vector2( -1400, 440 )
nodes/fragment/connections = PoolIntArray( 6, 0, 7, 1, 7, 0, 2, 0, 8, 0, 7, 0, 9, 0, 0, 0, 3, 0, 8, 0, 11, 0, 9, 0, 10, 0, 12, 0, 12, 0, 11, 0, 2, 0, 14, 0, 13, 0, 14, 1, 14, 0, 15, 0, 15, 0, 10, 0, 17, 0, 18, 1, 19, 0, 18, 0, 16, 0, 19, 0, 18, 0, 13, 0 )
