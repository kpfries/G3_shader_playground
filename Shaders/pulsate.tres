[gd_resource type="VisualShader" load_steps=11 format=2]

[ext_resource path="res://Textures/noise01.tres" type="Texture" id=1]
[ext_resource path="res://icon.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeTexture" id=8]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=4]

[sub_resource type="VisualShaderNodeVectorFunc" id=5]
function = 28

[sub_resource type="VisualShaderNodeVectorOp" id=6]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=7]
default_input_values = [ 0, Vector3( 0, 1, 0 ), 1, Vector3( 0, 0, 0 ) ]
operator = 2

[resource]
code = "shader_type spatial;
uniform sampler2D tex_vtx_2;uniform sampler2D tex_frg_2;


void vertex() {
// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	vec4 tex_vtx_2_read = texture( tex_vtx_2 , UV.xy );
	n_out2p0 = tex_vtx_2_read.rgb;
	n_out2p1 = tex_vtx_2_read.a;

// VectorOp:9
	vec3 n_in9p0 = vec3(0.00000,1.00000,0.00000);
	vec3 n_out9p0;
	n_out9p0 = n_in9p0 * n_out2p0;

// Input:4
	float n_out4p0;
	n_out4p0 = TIME;

// VectorFunc:7
	vec3 n_out7p0;
	n_out7p0=sin(vec3(n_out4p0));

// VectorOp:8
	vec3 n_out8p0;
	n_out8p0 = n_out9p0 * n_out7p0;

// Input:3
	vec3 n_out3p0;
	n_out3p0 = VERTEX;

// VectorOp:6
	vec3 n_out6p0;
	n_out6p0 = n_out8p0 + n_out3p0;

// Output:0
	VERTEX = n_out6p0;

}

void fragment() {
// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	vec4 tex_frg_2_read = texture( tex_frg_2 , UV.xy );
	n_out2p0 = tex_frg_2_read.rgb;
	n_out2p1 = tex_frg_2_read.a;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -653.929, -197 )
nodes/vertex/0/position = Vector2( 500, 200 )
nodes/vertex/2/node = SubResource( 1 )
nodes/vertex/2/position = Vector2( -1340, 200 )
nodes/vertex/3/node = SubResource( 2 )
nodes/vertex/3/position = Vector2( -1580, 1000 )
nodes/vertex/4/node = SubResource( 3 )
nodes/vertex/4/position = Vector2( -1580, 740 )
nodes/vertex/6/node = SubResource( 4 )
nodes/vertex/6/position = Vector2( -100, 440 )
nodes/vertex/7/node = SubResource( 5 )
nodes/vertex/7/position = Vector2( -1280, 740 )
nodes/vertex/8/node = SubResource( 6 )
nodes/vertex/8/position = Vector2( -480, 340 )
nodes/vertex/9/node = SubResource( 7 )
nodes/vertex/9/position = Vector2( -880, 220 )
nodes/vertex/connections = PoolIntArray( 4, 0, 7, 0, 3, 0, 6, 1, 7, 0, 8, 1, 6, 0, 0, 0, 8, 0, 6, 0, 2, 0, 9, 1, 9, 0, 8, 0 )
nodes/fragment/2/node = SubResource( 8 )
nodes/fragment/2/position = Vector2( -798.859, 333 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0 )
